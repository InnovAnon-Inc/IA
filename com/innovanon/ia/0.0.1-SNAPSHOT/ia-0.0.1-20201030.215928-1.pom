<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.innovanon</groupId>
	<artifactId>ia</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>InnovAnon</name>
	<description>InnovAnon, Inc. (Ministries) Corporate Parent POM for Maven</description>
	<url>${project.organization.url}/${repo.name}</url>
	<inceptionYear>2010</inceptionYear>

	<!-- https://mvnrepository.com/artifact/org.sonatype.oss/oss-parent -->
	<!-- 
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>9</version>
	</parent>
	-->
	
	<organization>
		<name>InnovAnon, Inc. (Ministries)</name>
		<url>https://${repo.user}.github.io</url>
	</organization>

	<developers>
		<developer>
			<id>lmaddox</id>
			<name>Brahmjot Singh Khalsa</name>
			<email>laurence.a.maddox@gmail.com</email>
			<url>https://github.com/lmaddox</url>
			<organization>InnovAnon, Inc. (Ministries)</organization>
			<organizationUrl>https://InnovAnon-Inc.github.io</organizationUrl>
			<roles>
				<role>Senior Ministerial Director</role>
				<role>Senior Managing Director</role>
				<role>Project Manager</role>
				<role>Lead Researcher</role>
				<role>Software Architect</role>
				<role>Software Engineer</role>
				<role>Dev Ops Engineer</role>
				<role>Graphic Designer</role>
				<role>Film Score Producer</role>
			</roles>
			<timezone>America/Chicago</timezone>
			<properties>
				<picUrl>https://c2.staticflickr.com/4/3545/3407135068_d872bb371f.jpg</picUrl>
			</properties>
		</developer>
	</developers>
	
	<!-- Public Domain License -->
	<licenses>
		<license>
			<comments>Free Code for a Free World</comments>
			<distribution>repo</distribution>
			<name>The Unlicense</name>
			<url>https://choosealicense.com/licenses/unlicense</url>
		</license>
	</licenses>

	<!-- TODO -->
	<!--
	<mailingLists>
		<mailingList>
			<name>project mailing list</name>
			<subscribe>dev-subscribe@innovanon.com</subscribe>
			<unsubscribe>dev-unsubscribe@innovanon.com</unsubscribe>
			<post>dev@innovanon.com</post>
			<archive>http://lmaddox.chickenkiller.com:4321/modmbox/dev</archive>
		</mailingList>
	</mailingLists>
	-->
	
	<!-- Projects are hosted on Github -->
	<scm>
		<connection>scm:git:git@github.com:${repo.user}/${repo.name}.git</connection>
		<developerConnection>scm:git:https://github.com/${repo.user}/${repo.name}.git</developerConnection>
		<url>https://github.com/${repo.user}/${repo.name}</url>
		<tag>HEAD</tag>
	</scm>

	<!-- Use Github's builtin issue management system -->
	<issueManagement>
		<system>Github Issues</system>
		<url>https://github.com/${repo.user}/${repo.name}/issues</url>
	</issueManagement>

	<!-- Use CircleCI as the continuous integration system; configure in .circleci/config.yml -->
	<ciManagement>
		<system>CircleCI</system>
		<url>https://app.circleci.com/pipelines/github/${repo.user}/${repo.name}</url>
		<notifiers>
			<notifier>
				<address>InnovAnon-Inc@protonmail.com</address>
				<type>mail</type>
			</notifier>
			<notifier>
				<address>InnovAnon-Inc@gmx.com</address>
				<type>mail</type>
			</notifier>
			<notifier>
				<address>InnovAnon-Inc@tutanota.com</address>
				<type>mail</type>
			</notifier>
			<notifier>
				<address>InnovAnon@mailfence.com</address>
				<type>mail</type>
			</notifier>
		</notifiers>
	</ciManagement>
	
	<distributionManagement>
		<!-- deploy our artifacts (e.g., pom.xml, *.jar) to special Github branch that can be used as a Maven repository -->
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
		<!-- deploy our site (e.g., javadocs) to special Github branch used to host static web content (e.g., .html and .js, but no .php) -->
		<site>
			<id>gh-pages</id>
			<name>Maven Site Deployment</name>
			<!--<url>github:http://${repo.user}.github.io/${repo.name}/</url>-->
			<url>git:ssh://git@github.com/${repo.user}/${repo.name}.git?gh-pages#</url>
		</site>
    </distributionManagement>

	<properties>
		<!-- ACHTUNG! Override these -->
		<repo.user>InnovAnon-Inc</repo.user>
		<repo.name>IA</repo.name>
		
		<!-- reasonable defaults -->
		<detail>false</detail>
		<verbose>true</verbose>
		<debug>false</debug>
		<indentSize>3</indentSize>
		<lineLength>120</lineLength>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<targetJDK>${java.version}</targetJDK>
		<targetJdk>${java.version}</targetJdk>

		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>

		<!-- latest versions a la maven versions plugin -->
		<junit.version>4.13.1</junit.version>

		<gmavenplus-plugin.version>1.11.0</gmavenplus-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>
		<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		
		<site-maven-plugin.version>0.12</site-maven-plugin.version>
		<maven-site-plugin.version>3.9.1</maven-site-plugin.version>
		<doxia-module-markdown.version>1.9.1</doxia-module-markdown.version>
		<maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
		<required-maven.version>3.6.0</required-maven.version>
		<maven-javadoc-plugin.version>2.9</maven-javadoc-plugin.version>
		<versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
		
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
		
		<commons-lang3.version>3.8</commons-lang3.version>
		<doxia-site-renderer.version>1.8.1</doxia-site-renderer.version>

		<maven-project-info-reports-plugin.version>3.1.1</maven-project-info-reports-plugin.version>
		<maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
		<maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-clover2-plugin.version>4.0.6</maven-clover2-plugin.version>
		<maven-pmd-plugin.version>3.10.0</maven-pmd-plugin.version>
		<maven-changes-plugin.version>2.12.1</maven-changes-plugin.version>
		<maven-changelog-plugin.version>2.3</maven-changelog-plugin.version>
		<taglist-maven-plugin.version>2.4</taglist-maven-plugin.version>
		<code-coverage-maven-plugin.version>1.0.1.Final</code-coverage-maven-plugin.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
		<cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
		<javancss-maven-plugin.version>2.1</javancss-maven-plugin.version>
		<findbugs-maven-plugin.version>3.0.5</findbugs-maven-plugin.version>
		<jdepend-maven-plugin.version>2.0</jdepend-maven-plugin.version>
		
		<maven-ear-plugin.version>3.1.0</maven-ear-plugin.version>
		<maven-surefire-report-plugin.version>3.0.0-M5</maven-surefire-report-plugin.version>
		<wagon-git.version>2.0.4</wagon-git.version>
		<wagon-ssh.version>2.12</wagon-ssh.version>
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
		<doxia-module-markdown.version>1.9.1</doxia-module-markdown.version>
		<wagon-maven-plugin.version>2.0.0</wagon-maven-plugin.version>

		<!-- TODO idk what I'm doing tbh -->
		<!-- <maven.pmd.excludes>**/generated-sources/**</maven.pmd.excludes>-->
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		
		<!--<defaultGoal>deploy</defaultGoal>-->
		<plugins>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
			</plugin>
			
			<plugin>
					<inherited>true</inherited>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>${site-maven-plugin.version}</version>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<archive>
							<index>true</index>
							<!--
							<manifest>
								<mainClass>${project.groupId}.${project.artifactId}.App</mainClass>
							</manifest>
							-->
							<addMavenDescriptor>true</addMavenDescriptor>
							<compress>true</compress>
							<recompressAddedZips>true</recompressAddedZips>
						</archive>
					</configuration>
					<executions>
						<execution>
							<id>attach-jar</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-source-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<includePom>true</includePom>
					</configuration>
					<!--
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
					-->
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<!-- TODO -->
				<plugin>
					<inherited>true</inherited>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
						
						<detectJavaApiLink>true</detectJavaApiLink>
						<detectLinks>false</detectLinks>
						<detectOfflineLinks>false</detectOfflineLinks>
						<quiet>true</quiet>
						<useStandardDocletOptions>true</useStandardDocletOptions>
						<show>private</show>
						<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
						<docletArtifact>
							<groupId>org.umlgraph</groupId>
							<artifactId>umlgraph</artifactId>
							<version>${umlgraph.version}</version>
						</docletArtifact>
					</configuration>
					<!--
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					-->
					<executions>
						<execution>
							<id>attach-javadoc</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<plugin>
					<inherited>true</inherited>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>${site-maven-plugin.version}</version>
					<configuration>
						<repositoryOwner>${repo.user}</repositoryOwner>
						<repositoryName>${repo.name}</repositoryName>
					</configuration>
					<executions>
						<execution>
							<id>mvn-repo</id>
							<configuration>
								<description>[ci skip] Repo ${project.name} build, ${project.version} release</description> <!-- git commit message -->
								<message>[ci skip] Official ${project.name} build</message>
								<noJekyll>true</noJekyll>  <!-- disable webpage processing -->
								<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
								<branch>refs/heads/mvn-repo</branch> <!-- remote branch name -->
								<includes><include>**/*</include></includes>
								<merge>true</merge>
							</configuration>
							<goals>
								<goal>site</goal>
							</goals>
							<phase>deploy</phase>
						</execution>
					</executions>
				</plugin>
				<!--
				<plugin>
					<groupId>com.github.github</groupId>
					<artifactId>downloads-maven-plugin</artifactId>
					<version>0.6</version>
					<configuration>
						<description>${project.version} release of ${project.name}</description>
						<override>true</override>
						<includeAttached>true</includeAttached>
						<server>github</server>
					</configuration>
					<executions>
						<execution>
						<goals>
							<goal>upload</goal>
						</goals>
						<phase>deploy</phase>
						</execution>
					</executions>
				</plugin>
				-->
				
				<!-- TODO -->
				<plugin>
					<inherited>true</inherited>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
					<!--<configuration>
						<skipDeploy>true</skipDeploy>
					</configuration>-->
					<dependencies>
						<dependency>
							<!--
							| allows markdown syntax for site generation. To use it place files below
							| src/site/markdown/[filename].md
							-->
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-module-markdown</artifactId>
							<version>${doxia-module-markdown.version}</version>
						</dependency>
						<!--
						<dependency>
							<groupId>net.trajano.wagon</groupId>
							<artifactId>wagon-git</artifactId>
							<version>${wagon-git.version}</version>
						</dependency>
						-->
					</dependencies>
				</plugin>
				
				<plugin>
					<inherited>true</inherited>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
					<configuration>
						<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
					</configuration>
				</plugin> 

				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
				</plugin>

				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<compilerVersion>${java.version}</compilerVersion>
						<optimize>true</optimize>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<!-- <encoding>UTF-8</encoding> -->
						<encoding>${project.build.sourceEncoding}</encoding>
						<release>${java.version}</release>
						<jdkToolchain>
						<version>${java.version}</version>
						</jdkToolchain>
						<debug>${debug}</debug>
	<!--					<compilerArgs>
							<arg>add-modules</arg>
				<arg>java.xml.bind</arg>
						</compilerArgs>
	-->				</configuration>
				</plugin>

				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
				<plugin>
					<inherited>true</inherited>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<id>enforce-maven</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>${required-maven.version}</version>
									</requireMavenVersion>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<!-- install plugin -->
				<!-- release plugin -->
				<!-- deploy plugin -->
					
				
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-gpg-plugin -->
				<plugin>
					<inherited>true</inherited>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<configuration>
						<keyname>${gpg.keyname}</keyname>
						<passphraseServerId>${gpg.keyname}</passphraseServerId>
					</configuration>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions> 
				</plugin>
				
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
					<inherited>true</inherited>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
					<inherited>true</inherited>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
					<inherited>true</inherited>
				</plugin>
				
				<plugin>
					<artifactId>maven-ear-plugin</artifactId>
					<version>${maven-ear-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<version>${java.version}</version>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<inherited>true</inherited>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
						<execution>
							<id>verify</id>
							<goals>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-report-plugin.version}</version>
				</plugin>
			
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<version>${wagon-maven-plugin.version}</version>
					<inherited>true</inherited>
					<executions>
						<execution>
							<id>upload-javadoc</id>
							<phase>deploy</phase>
							<goals>
								<goal>upload</goal>
							</goals>
							<configuration>
								<!--
								<fromDir>local.dir</fromDir>
								<includes>*</includes>
								<excludes>pom.xml</excludes>
								<url>scp://your.remote.host/</url>
								<toDir>remote.dir</toDir>
								-->
							</configuration>
						</execution>
					</executions>
				  </plugin>
			</plugins>
		</pluginManagement>
		
		<extensions>
			<extension>
				<groupId>net.trajano.wagon</groupId>
				<artifactId>wagon-git</artifactId>
				<version>${wagon-git.version}</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>${wagon-ssh.version}</version>
			</extension>
		</extensions>
	</build>
	
	<reporting>
		<plugins>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<reportSets>
					<!--
					<reportSet>
						<id>aggregate</id>
						<inherited>false</inherited>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
					-->
					<reportSet>
						<reports>
							<report>ci-management</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<report>dependency-info</report>
							<report>dependency-management</report>
							<report>distribution-management</report>
							<report>index</report>
							<report>issue-management</report>
							<report>licenses</report>
							<report>mailing-lists</report>
							<!--<report>modules</report>-->
							<report>plugin-management</report>
							<report>team</report>
							<report>scm</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven-jxr-plugin.version}</version>
				<inherited>true</inherited>
				<configuration>
					<linkJavadoc>true</linkJavadoc>
				<!--<javadocDir>/path/to/javadocs</javadocDir>--> <!-- same as destdir in javadoc plugin -->
				</configuration>
			<!--
				<reportSets>
					<reportSet>
						<id>aggregate</id>
						<inherited>false</inherited>
						<reports>
							<report>aggregate</report>
							<report>test-aggregate</report>
						</reports>
					</reportSet>
			-->		<!--
					<reportSet>
						<inherited>true</inherited>
						<reports>
							<report>dependencies</report>
							<report>project-team</report>
							<report>mailing-list</report>
							<report>cim</report>
							<report>issue-tracking</report>
							<report>license</report>
							<report>scm</report>
						</reports>
					</reportSet>
					-->
			<!--	</reportSets>
			-->
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<inherited>true</inherited>
				<configuration>
					<javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
					
					<detectJavaApiLink>true</detectJavaApiLink>
					<detectLinks>false</detectLinks>
					<detectOfflineLinks>false</detectOfflineLinks>
					<quiet>true</quiet>
					<useStandardDocletOptions>true</useStandardDocletOptions>
					<show>private</show>
					<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
					<docletArtifact>
						<groupId>org.umlgraph</groupId>
						<artifactId>umlgraph</artifactId>
						<version>${umlgraph.version}</version>
					</docletArtifact>
				</configuration>
				<!--
				<reportSets>
					<reportSet>
						<inherited>true</inherited>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id>
						<inherited>false</inherited>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
				-->
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${versions-maven-plugin.version}</version>
				<inherited>true</inherited>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependency-updates-report</report>
							<report>plugin-updates-report</report>
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>
</project>
